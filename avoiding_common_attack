## Avoiding Common Attacks


### Withdraw

The withdraw function is protected with onlyOwner


### Re-Entrancy

The contract don't send ether to someone, except owner with transfer, and transfer don't allow re-entrancy


### Overflow

In Solidity 0.8.0 or better, math overflows revert by default, we don't need SafeMath


### DOS

getMyCharacters() loop is limited because one address can only have 5 characters  
getOthersCharacters() ?


### Tx Origin

Not used in this contract


### Randomness manipulation

The first implementation of the contract used a random number generated by a combination of timestamp, difficulty and msg.sender. However this type of randomess is manipulable by the miners (who can choose timestamp) and by clever blockchain users.

To correct this vulnerability we choose to use the chainlink oracle with the VRF contract (verifiable random function)
