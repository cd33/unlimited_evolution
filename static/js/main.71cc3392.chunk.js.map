{"version":3,"sources":["img/home.jpg","img/assetsStuffs/swordBasic.png","img/assetsStuffs/shieldBasic.png","img/assetsStuffs/swordExcalibur.png","img/assetsStuffs/shieldAegis.png","img/MyCharacters.jpg","img/Arena.jpg","img/stuffs/swordBasic.png","img/stuffs/shieldBasic.png","img/stuffs/swordExcalibur.png","img/stuffs/shieldAegis.png","img/stuffs/potion.png","img/MyStuff.jpg","img/logoGrosTraits.png","components/intersectionObserver.js","styles/globalStyles.js","getWeb3.js","pages/Home.js","components/Modal.js","components/CharacterRenderer.js","pages/MyCharacters.js","pages/MyEnemies.js","components/StuffRenderer.js","pages/MyStuff.js","styles/Navbar.style.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","observer","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","bc","ContainerCard","border","ContainerCardMyCharacters","TextTitle","p","color","fs","TextSubTitle","TextDescription","TextButtonStyle","width","br","ModalBackground","show","ModalContainer","up","down","Select","select","ButtonLink","Link","Button","button","props","primary","bchover","colorhover","ButtonHome","ButtonTop","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Home","useEffect","array","wordIndex","letterIndex","target","document","getElementById","loop","setTimeout","length","letter","createElement","appendChild","classList","add","style","opacity","animation","textContent","remove","createLetter","img","paddingTop","marginTop","display","id","textAlign","to","ModalCustom","modalShow","setModalShow","content","title","CloseModal","onClick","height","float","listenerCallbacks","WeakMap","handleIntersections","entries","forEach","entry","has","cb","get","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","undefined","IntersectionObserver","rootMargin","threshold","parts","stuffs","s_1","s_2","s_3","s_4","CharacterRenderer","character","size","characterStyle","position","ImageRenderer","elem","callback","url","thumb","useState","isLoaded","setIsLoaded","isInView","setIsInView","imgRef","useRef","current","set","observe","className","ref","paddingBottom","classnames","alt","src","onLoad","weapon","shield","minWidth","minHeight","key","MyCharacters","loading","rest","setTypeCharacter","setGenderCharacter","createCharacter","characters","attacks","typeCharacterName","typeGenderName","stuffType","potionUse","resting","timeStamp","balancesMyStuff","onChange","e","value","marginRight","marginLeft","disabled","map","borderRadius","margin","marginBottom","level","xp","hp","stamina","typeCharacter","attack1","attack2","defence1","defence2","genderCharacter","MyEnemies","setSelectedCharacter","othersCharacters","selectedCharacter","fight","charactersDisplayed","setCharactersDisplayed","tempArray","lastRest","push","JSON","parse","handleSelectedCharacter","flexWrap","fontSize","StuffRenderer","stuffId","s_5","MyStuff","setTypeBuyStuff","buyStuff","typeBuyStuff","setTypeEquipChar","typeEquipChar","equipStuff","balancesContractStuff","flexDirection","stuff","i","bonusAttack1","bonusAttack2","bonusDefence1","bonusDefence2","typeStuff","Nav","Menu","isOpen","MenuLink","Hamburger","NavbarAddress","NavLink","Navbar","accounts","setIsOpen","alignItems","logo","App","setWeb3","setAccounts","ueContract","setUeContract","setTimeStamp","setCharacters","setOthersCharacters","setLoading","titleModal","setTitleModal","contentModal","setContentModal","setStuffs","setBalancesContractStuff","setBalancesMyStuff","eth","handleRevert","getAccounts","on","location","reload","_chainId","net","getId","networkId","handleModal","ueNetwork","UnlimitedEvolution","networks","Contract","abi","address","methods","getMyCharacters","call","from","then","res","getOthersCharacters","getMyStuffs","getBlockNumber","lastBlockNumber","getBlock","lastBlockInfo","timestamp","subscribe","err","error","init","balanceContractStuff","balanceOf","_address","balanceMyStuff","events","CharacterCreated","event","returnValues","message","Rested","tokenId","Fighted","myTokenId","rivalTokenId","substrateLifeToRival","substrateLifeToMe","LevelUp","StuffBought","StuffEquiped","PotionUsed","_myTokenId","usePotion","send","once","val","parseInt","type","nb","attacksType","brute","spiritual","elementary","exact","path","element","askCreateCharacter","utils","toWei","receipt","_rivalTokenId","_stuffId","_tokenId","Modal","alignSelf","Boolean","hostname","match","ReactDOM","render","basename","process","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71cc3392.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.8609c655.jpg\";","module.exports = __webpack_public_path__ + \"static/media/swordBasic.2b11b4c0.png\";","module.exports = __webpack_public_path__ + \"static/media/shieldBasic.95381f39.png\";","module.exports = __webpack_public_path__ + \"static/media/swordExcalibur.9070b765.png\";","module.exports = __webpack_public_path__ + \"static/media/shieldAegis.9a5bf9bd.png\";","module.exports = __webpack_public_path__ + \"static/media/MyCharacters.59e84ad6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Arena.36041009.jpg\";","module.exports = __webpack_public_path__ + \"static/media/swordBasic.7b20d003.png\";","module.exports = __webpack_public_path__ + \"static/media/shieldBasic.881358ef.png\";","module.exports = __webpack_public_path__ + \"static/media/swordExcalibur.84ec7fa0.png\";","module.exports = __webpack_public_path__ + \"static/media/shieldAegis.60d4cfff.png\";","module.exports = __webpack_public_path__ + \"static/media/potion.4cfc342f.png\";","module.exports = __webpack_public_path__ + \"static/media/MyStuff.be429b57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logoGrosTraits.2664ba03.png\";","import { useEffect } from 'react';\r\n\r\nlet listenerCallbacks = new WeakMap();\r\n\r\nlet observer;\r\n\r\nfunction handleIntersections(entries) {\r\n  entries.forEach(entry => {\r\n    if (listenerCallbacks.has(entry.target)) {\r\n      let cb = listenerCallbacks.get(entry.target);\r\n\r\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\r\n        observer.unobserve(entry.target);\r\n        listenerCallbacks.delete(entry.target);\r\n        cb();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction getIntersectionObserver() {\r\n  if (observer === undefined) {\r\n    observer = new IntersectionObserver(handleIntersections, {\r\n      rootMargin: '100px',\r\n      threshold: '0.15'\r\n    });\r\n  }\r\n  return observer;\r\n}\r\n\r\nexport function useIntersection(elem, callback) {\r\n  useEffect(() => {\r\n    let target = elem.current;\r\n    let observer = getIntersectionObserver();\r\n    listenerCallbacks.set(target, callback);\r\n    observer.observe(target);\r\n\r\n    return () => {\r\n      listenerCallbacks.delete(target);\r\n      observer.unobserve(target);\r\n    };\r\n  }, [callback, elem]);\r\n}\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : 'none')};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : 'column')};\r\n  justify-content: ${({ jc }) => (jc ? jc : 'flex-start')};\r\n  align-items: ${({ ai }) => (ai ? ai : 'flex-start')};\r\n  background-color: ${({ bc }) => (bc ? bc : 'none')};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : 'none')};\r\n  background-size: cover;\r\n  background-position: center;\r\n`\r\n\r\nexport const ContainerCard = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : 'column')};\r\n  justify-content: ${({ jc }) => (jc ? jc : 'flex-start')};\r\n  align-items: ${({ ai }) => (ai ? ai : 'flex-start')};\r\n  background-color: ${({ bc }) => (bc ? bc : 'none')};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : 'none')};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 20px 20px;\r\n  box-shadow: 5px 5px 5px 5px black;\r\n  border: ${({ border }) => (border ? border : 'none')};\r\n`\r\n\r\nexport const ContainerCardMyCharacters = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: ${({ jc }) => (jc ? jc : 'flex-start')};\r\n  align-items: center;\r\n  background-color: ${({ bc }) => (bc ? bc : 'none')};\r\n  width: auto;\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 20px 20px;\r\n  box-shadow: 5px 5px 5px 5px black;\r\n  border: 2px solid;\r\n\r\n  @media (max-width: 900px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nexport const TextTitle = styled.p`\r\n  color: ${({ color }) => (color ? color : 'white')};\r\n  font-size: ${({ fs }) => (fs ? `${fs}px` : '40px')};\r\n  font-weight: 700;\r\n  text-shadow: 1px 1px 2px black;\r\n`\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: ${({ color }) => (color ? color : 'white')};\r\n  font-size: ${({ fs }) => (fs ? `${fs}px` : '30px')};\r\n  font-weight: 700;\r\n  text-shadow: 1px 1px 2px black;\r\n  text-align: center;\r\n`\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: ${({ fs }) => (fs ? `${fs}px` : '14px')};\r\n  font-weight: 600;\r\n  margin-bottom: 0px;\r\n  text-align: center;\r\n`\r\n\r\nexport const TextButtonStyle = styled.div`\r\n  color: var(--white);\r\n  font-size: ${({ fs }) => (fs ? fs : '20px')};\r\n  font-weight: 600;\r\n  background-color: ${({ bc }) => (bc ? bc : 'red')};\r\n  width: ${({ width }) => (width ? width : '100px')};\r\n  border-radius: ${({ br }) => (br ? br : '20px')};\r\n  text-align: center;\r\n`\r\n\r\nexport const ModalBackground = styled.div`\r\n  z-index: auto;\r\n  display: ${({ show }) => (show ? 'flex' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: antiquewhite;\r\n  width: 30%;\r\n  height: auto;\r\n  min-height: 30%;\r\n  border-radius: 10px;\r\n  padding: 0.75rem;\r\n  color: rgba(0, 0, 139, 0.7);\r\n  text-align: center;\r\n  text-align-vertical: center;\r\n`\r\n\r\nexport const up = styled.div`\r\n  border: 2px solid black;\r\n  transform: rotate(-45deg);\r\n  position: relative;\r\n  top: 14px;\r\n  right: 6px;\r\n  width: 40px;\r\n  background-color: black;\r\n  border-radius: 25px;\r\n`\r\n\r\nexport const down = styled.div`\r\n  border: 2px solid black;\r\n  transform: rotate(45deg);\r\n  position: relative;\r\n  top: 10px;\r\n  right: 6px;\r\n  width: 40px;\r\n  background-color: black;\r\n  border-radius: 25px;\r\n`\r\n\r\nexport const Select = styled.select`\r\n  height: 50px;\r\n  font-size: 1.1em;\r\n  font-weight: 700;\r\n  border-radius: 3px;\r\n  border: 2px solid black;\r\n  color: ${({ color }) => (color ? color : 'black')};\r\n  background-color: ${({ bc }) => (bc ? bc : 'white')};\r\n`\r\n\r\nexport const ButtonLink = styled(Link)`\r\n  color: #fff;\r\n  text-decoration: none;\r\n\r\n  :hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  background: ${(props) => (props.primary ? 'black' : 'white')};\r\n  color: ${(props) => (props.primary ? 'white' : 'black')};\r\n  font-size: 1em;\r\n  margin-top: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid white;\r\n  border-radius: 3px;\r\n\r\n  :hover {\r\n    background-color: ${({ bchover }) => (bchover ? bchover : '#46bcb9')};\r\n    color: ${({ colorhover }) => (colorhover ? colorhover : 'auto')};\r\n  }\r\n`\r\n\r\nexport const ButtonHome = styled.div`\r\n  background-color: #46bcb9;\r\n  width: 300px;\r\n  height: 60px;\r\n  margin-top: 25px;\r\n  border-radius: 5%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  text-shadow: 1px 1px 2px black;\r\n  border: 2px solid black;\r\n\r\n  :hover {\r\n    background-color: #ff00ff;\r\n    border: 2px solid var(--white);\r\n  }\r\n`\r\n\r\nexport const ButtonTop = styled.button`\r\n  background: ${(props) => (props.primary ? 'black' : 'white')};\r\n  color: ${(props) => (props.primary ? 'white' : 'black')};\r\n  font-size: 1.2em;\r\n  font-weight: 700;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid white;\r\n  border-radius: 3px;\r\n  min-height: 50px;\r\n  border-radius: 3px;\r\n\r\n  :hover {\r\n    background-color: ${({ bc }) => (bc ? bc : '#46bcb9')};\r\n  }\r\n`","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Accounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { useEffect } from 'react'\r\nimport * as s from '../styles/globalStyles'\r\nimport img from '../img/home.jpg'\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    let array = ['Bitcoin', 'Ethereum', 'polygone', 'Combats']\r\n    let wordIndex = 0\r\n    let letterIndex = 0\r\n    const target = document.getElementById('text-target')\r\n\r\n    const createLetter = () => {\r\n      const letter = document.createElement('span')\r\n      target.appendChild(letter)\r\n\r\n      letter.classList.add('letter')\r\n      letter.style.opacity = '0'\r\n      letter.style.animation = 'anim 5s ease forwards'\r\n      letter.textContent = array[wordIndex][letterIndex]\r\n\r\n      setTimeout(() => {\r\n        letter.remove()\r\n      }, 2000)\r\n    }\r\n\r\n    const loop = () => {\r\n      setTimeout(() => {\r\n        if (wordIndex >= array.length) {\r\n          wordIndex = 0\r\n          letterIndex = 0\r\n          loop()\r\n        } else if (letterIndex < array[wordIndex].length) {\r\n          createLetter()\r\n          letterIndex++\r\n          loop()\r\n        } else {\r\n          letterIndex = 0\r\n          wordIndex++\r\n          setTimeout(() => {\r\n            loop()\r\n          }, 2000)\r\n        }\r\n      }, 80)\r\n    }\r\n    loop()\r\n  }, [])\r\n\r\n  return (\r\n    <s.Container image={img} ai=\"center\" flex=\"1\" style={{ paddingTop: 80 }}>\r\n      <s.TextTitle fs=\"80\" style={{ marginTop: 80 }}>\r\n        Unlimited Evolution\r\n      </s.TextTitle>\r\n      <span style={{display: \"flex\"}}>\r\n        <s.TextSubTitle fs=\"50\" color=\"#46bcb9\">Gaming NFT</s.TextSubTitle>\r\n        <span id=\"text-target\"></span>  \r\n      </span>\r\n      <s.TextSubTitle fs=\"35\" style={{ marginTop: 50, textAlign: 'center' }}>\r\n        Jeu play-to-earn de combat avec des NFTs\r\n        <br />\r\n        Mesure-toi à d'autres joueurs, détruit les et obtiens des récompenses !\r\n        <br />\r\n      </s.TextSubTitle>\r\n      <s.ButtonHome>\r\n        <s.ButtonLink to=\"/MyCharacters\">Commencer l'aventure !</s.ButtonLink>\r\n      </s.ButtonHome>\r\n    </s.Container>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\nimport * as s from \"../styles/globalStyles\";\r\n\r\nconst ModalCustom = ({ modalShow, setModalShow, content, title }) => {\r\n    const CloseModal = () => (\r\n        <div onClick={() => setModalShow(!modalShow)} style={{ width: 32, height: 32, float: \"right\" }}>\r\n            <s.up /><s.down />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <s.ModalBackground show={modalShow}>\r\n            <s.ModalContainer>\r\n                <CloseModal />\r\n                <s.SpacerMedium />\r\n                <s.TextTitle>{title}</s.TextTitle>\r\n                <s.TextSubTitle>{content}</s.TextSubTitle>\r\n            </s.ModalContainer>\r\n        </s.ModalBackground>\r\n    );\r\n};\r\n\r\nexport default ModalCustom;","import React, { useState, useRef } from 'react'\r\nimport classnames from 'classnames'\r\nimport { useIntersection } from './intersectionObserver'\r\nimport '../styles/imageRenderer.scss'\r\nimport s_1 from \"../img/assetsStuffs/swordBasic.png\";\r\nimport s_2 from \"../img/assetsStuffs/shieldBasic.png\";\r\nimport s_3 from \"../img/assetsStuffs/swordExcalibur.png\";\r\nimport s_4 from \"../img/assetsStuffs/shieldAegis.png\";\r\n\r\nconst parts = {\r\n  stuffs: [\"\", s_1, s_2, s_3, s_4]\r\n};\r\n\r\nconst CharacterRenderer = ({ character = null, size, style }) => {\r\n  const characterStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n  }\r\n\r\n  const ImageRenderer = ({ url, thumb, width, height }) => {\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [isInView, setIsInView] = useState(false)\r\n    const imgRef = useRef()\r\n    useIntersection(imgRef, () => {\r\n      setIsInView(true)\r\n    })\r\n\r\n    const handleOnLoad = () => {\r\n      setIsLoaded(true)\r\n    }\r\n    return (\r\n      <div\r\n        className=\"image-container\"\r\n        ref={imgRef}\r\n        style={{\r\n          paddingBottom: `${(height / width) * 100}%`,\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {isInView && (\r\n          <>\r\n            <img\r\n              className={classnames('image', 'thumb', {\r\n                ['isLoaded']: !!isLoaded,\r\n              })}\r\n              alt={'nft_thumb'}\r\n              src={thumb}\r\n              style={characterStyle}\r\n            />\r\n            <img\r\n              className={classnames('image', {\r\n                ['isLoaded']: !!isLoaded,\r\n              })}\r\n              alt={'nft'}\r\n              src={url}\r\n              onLoad={handleOnLoad}\r\n              style={characterStyle}\r\n            />\r\n            {character.weapon !== '0' && (\r\n              <img\r\n                alt={'weapon'}\r\n                src={parts.stuffs[character.weapon]}\r\n                style={characterStyle}\r\n              />\r\n            )}\r\n            {character.shield !== '0' && (\r\n              <img\r\n                alt={'shield'}\r\n                src={parts.stuffs[character.shield]}\r\n                style={characterStyle}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minWidth: size,\r\n        minHeight: size,\r\n        position: 'relative',\r\n        ...style,\r\n      }}\r\n    >\r\n      <ImageRenderer\r\n        key={character.id}\r\n        url={`https://gateway.pinata.cloud/ipfs/QmZEC9RAZ2bLdgdXEg3x2zno4Cq62SzMMZbjCyvgkP3KxG/${character.id}.png`}\r\n        thumb={`https://gateway.pinata.cloud/ipfs/QmZEC9RAZ2bLdgdXEg3x2zno4Cq62SzMMZbjCyvgkP3KxG/${character.id}.png`}\r\n        width={size}\r\n        height={size}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterRenderer","import React from 'react'\r\nimport * as s from '../styles/globalStyles'\r\nimport CharacterRenderer from '../components/CharacterRenderer'\r\nimport img from '../img/MyCharacters.jpg'\r\n\r\nconst MyCharacters = ({\r\n  loading,\r\n  rest,\r\n  setTypeCharacter,\r\n  setGenderCharacter,\r\n  createCharacter,\r\n  characters,\r\n  attacks,\r\n  typeCharacterName,\r\n  typeGenderName,\r\n  stuffType,\r\n  potionUse,\r\n  resting,\r\n  timeStamp,\r\n  balancesMyStuff,\r\n}) => {\r\n  return (\r\n    <s.Container image={img} ai=\"center\" flex=\"1\" style={{ paddingTop: 80 }}>\r\n      <s.TextTitle>Mes Personnages</s.TextTitle>\r\n      <s.TextSubTitle>Veuillez choisir un type de personnage</s.TextSubTitle>\r\n\r\n      <s.Container fd=\"row\" ai=\"center\" jc=\"center\">\r\n        <s.Select\r\n          onChange={(e) => setTypeCharacter(e.target.value)}\r\n          style={{ marginRight: 16, marginLeft: 16 }}\r\n        >\r\n          <option value=\"0\">BRUTE</option>\r\n          <option value=\"1\">SPIRITUAL</option>\r\n          <option value=\"2\">ELEMENTARY</option>\r\n        </s.Select>\r\n\r\n        <s.Select onChange={(e) => setGenderCharacter(e.target.value)}>\r\n          <option value=\"0\">MASCULINE</option>\r\n          <option value=\"1\">FEMININE</option>\r\n          <option value=\"2\">OTHER</option>\r\n        </s.Select>\r\n\r\n        <s.ButtonTop\r\n          bc=\"#63b93f\"\r\n          disabled={loading ? 1 : 0}\r\n          onClick={() => createCharacter()}\r\n          primary={loading ? '' : 'primary'}\r\n        >\r\n          CREER PERSONNAGE\r\n        </s.ButtonTop>\r\n      </s.Container>\r\n      <s.SpacerSmall />\r\n      {!characters && <s.TextSubTitle>Créez votre premier NFT</s.TextSubTitle>}\r\n\r\n      {characters &&\r\n        characters.length > 0 &&\r\n        characters.map((character) => {\r\n          return (\r\n              <s.ContainerCardMyCharacters\r\n                key={character.id}\r\n                bc=\"#85d45c\"\r\n                border=\"2px solid\"\r\n                style={{ borderRadius: 20, margin: 20}} //, width: \"90%\"\r\n              >\r\n                <s.Container fd=\"row\">\r\n                <CharacterRenderer character={character} size={450} />\r\n\r\n                <s.Container flex=\"1\" ai=\"center\" style={{marginLeft: 50}}>\r\n                    <s.Container\r\n                      fd=\"row\"\r\n                      jc=\"center\"\r\n                      style={{marginTop: 10, marginBottom:20}}\r\n                    >\r\n                      <s.TextButtonStyle fs=\"25px\" width=\"125px\" br=\"25px\" style={{marginRight:20}}>ID: {character.id}</s.TextButtonStyle>\r\n                      <s.TextButtonStyle fs=\"25px\" width=\"125px\" br=\"25px\" bc=\"green\">\r\n                        Level: {character.level}\r\n                      </s.TextButtonStyle>\r\n                    </s.Container>\r\n\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>XP: {character.xp}</s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>HP: {character.hp}</s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    Stamina: {character.stamina}\r\n                  </s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    {attacks(character.typeCharacter, 0)}: {character.attack1}\r\n                  </s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    {attacks(character.typeCharacter, 1)}: {character.attack2}\r\n                  </s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    {attacks(character.typeCharacter, 2)}: {character.defence1}\r\n                  </s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    {attacks(character.typeCharacter, 3)}: {character.defence2}\r\n                  </s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    Type: {typeCharacterName(character.typeCharacter)}\r\n                  </s.TextSubTitle>\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    Gender: {typeGenderName(character.genderCharacter)}\r\n                  </s.TextSubTitle>\r\n                  {character.weapon !== '0' && (\r\n                    <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                      Weapon: {stuffType[character.weapon]}\r\n                    </s.TextSubTitle>\r\n                  )}\r\n                  {character.shield !== '0' && (\r\n                    <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                      Shield: {stuffType[character.shield]}\r\n                    </s.TextSubTitle>\r\n                  )}\r\n                  <s.TextSubTitle fs=\"24\" style={{marginBottom: 5}}>\r\n                    {resting(character, timeStamp)}\r\n                  </s.TextSubTitle>\r\n                  \r\n                </s.Container>\r\n                </s.Container>\r\n                {(character.hp < 100 || character.stamina < 100) && (\r\n                    <s.Container fd=\"row\" jc=\"space-around\">\r\n                      <s.Button\r\n                        disabled={loading ? 1 : 0}\r\n                        onClick={() => rest(character.id)}\r\n                        primary={loading ? '' : 'primary'}\r\n                      >\r\n                        SE REPOSER\r\n                      </s.Button>\r\n                      {balancesMyStuff[5] > 0 && (\r\n                        <s.Button\r\n                          disabled={loading ? 1 : 0}\r\n                          onClick={() => potionUse(character.id)}\r\n                          primary={loading ? '' : 'primary'}\r\n                        >\r\n                          UTILISER UNE POTION\r\n                        </s.Button>\r\n                      )}\r\n                    </s.Container>\r\n                  )}\r\n              </s.ContainerCardMyCharacters>\r\n          )\r\n        })}\r\n    </s.Container>\r\n  )\r\n}\r\n\r\nexport default MyCharacters\r\n","import React, { useEffect, useState } from 'react'\r\nimport * as s from '../styles/globalStyles'\r\nimport CharacterRenderer from '../components/CharacterRenderer'\r\nimport img from '../img/Arena.jpg'\r\n\r\nconst MyEnemies = ({\r\n  loading,\r\n  characters,\r\n  typeCharacterName,\r\n  typeGenderName,\r\n  setSelectedCharacter,\r\n  othersCharacters,\r\n  selectedCharacter,\r\n  fight,\r\n  timeStamp,\r\n}) => {\r\n  const [charactersDisplayed, setCharactersDisplayed] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (othersCharacters && othersCharacters.length > 0) {\r\n      let tempArray = []\r\n      othersCharacters.map((character) => {\r\n        if (\r\n          timeStamp - 86400 > character.lastRest &&\r\n          character.hp > 0 &&\r\n          selectedCharacter &&\r\n          selectedCharacter.level <= character.level\r\n        ) {\r\n          tempArray.push(character)\r\n        }\r\n        return ''\r\n      })\r\n      setCharactersDisplayed(tempArray)\r\n    }\r\n  }, [selectedCharacter, othersCharacters, timeStamp])\r\n\r\n  const handleSelectedCharacter = (e) => {\r\n    if (e === '') {\r\n      setSelectedCharacter(null)\r\n      return null\r\n    }\r\n    let tempArray = { id: null, level: null }\r\n    let character = JSON.parse(e)\r\n    tempArray.id = character.id\r\n    tempArray.level = character.level\r\n    setSelectedCharacter(tempArray)\r\n  }\r\n  return (\r\n    <s.Container image={img} ai=\"center\" flex=\"1\" style={{ paddingTop: 80 }}>\r\n      <s.TextTitle>Mes Ennemis</s.TextTitle>\r\n\r\n      {characters && characters.length > 0 ? (\r\n        <>\r\n          <s.TextSubTitle>\r\n            Veuillez choisir un personnage pour combattre\r\n          </s.TextSubTitle>\r\n          <s.Select onChange={(e) => handleSelectedCharacter(e.target.value)}>\r\n            <option value=\"\">Choisissez un personnage</option>\r\n            {characters.map((character) => {\r\n              if (timeStamp - 86400 > character.lastRest) {\r\n                return (\r\n                  <option\r\n                    key={character.id}\r\n                    value={`{\"id\":${character.id},\"level\":${character.level}}`}\r\n                  >\r\n                    ID #{character.id}\r\n                  </option>\r\n                )\r\n              } else return ''\r\n            })}\r\n          </s.Select>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <s.TextSubTitle style={{ marginTop: 50 }}>\r\n            Pour débuter un combat, <br /> Vous devez posséder un personnage\r\n          </s.TextSubTitle>\r\n          <s.ButtonHome>\r\n            <s.ButtonLink to=\"/MyCharacters\">\r\n              Commencer l'aventure !\r\n            </s.ButtonLink>\r\n          </s.ButtonHome>\r\n        </>\r\n      )}\r\n\r\n      <s.Container\r\n        fd=\"row\"\r\n        jc=\"center\"\r\n        style={{ flexWrap: 'wrap', marginTop: 30 }}\r\n      >\r\n        {selectedCharacter &&\r\n          (charactersDisplayed.length > 0 ? (\r\n            charactersDisplayed.map((character) => {\r\n              return (\r\n                <div key={character.id} style={{ marginTop: 15, marginLeft: 50, marginRight: 50, marginBottom: 50 }}>\r\n                  <s.ContainerCard\r\n                    ai=\"center\"\r\n                    bc=\"black\"\r\n                    border=\"2px solid white\"\r\n                    style={{ minWidth: 200, borderRadius: 10 }}\r\n                  >\r\n                    <CharacterRenderer character={character} size={300} />\r\n\r\n                    <s.Container\r\n                      fd=\"row\"\r\n                      jc=\"space-around\"\r\n                      style={{ marginTop: 30 }}\r\n                    >\r\n                      <s.TextButtonStyle>ID: {character.id}</s.TextButtonStyle>\r\n                      <s.TextButtonStyle bc=\"green\">\r\n                        Level: {character.level}\r\n                      </s.TextButtonStyle>\r\n                    </s.Container>\r\n\r\n                    <s.Container\r\n                      fd=\"row\"\r\n                      jc=\"space-around\"\r\n                      style={{ marginTop: 20, fontSize: 16 }}\r\n                    >\r\n                      <s.TextDescription fs=\"16\">\r\n                        Type: {typeCharacterName(character.typeCharacter)}\r\n                      </s.TextDescription>\r\n                      <s.TextDescription fs=\"16\">\r\n                        Gender: {typeGenderName(character.genderCharacter)}\r\n                      </s.TextDescription>\r\n                    </s.Container>\r\n\r\n                    {characters && characters.length > 0 && (\r\n                      <s.Container fd=\"row\" jc=\"center\">\r\n                        <s.Button\r\n                        bchover=\"white\"\r\n                        colorhover=\"black\"\r\n                          disabled={loading ? 1 : 0}\r\n                          onClick={() =>\r\n                            fight(selectedCharacter.id, character.id)\r\n                          }\r\n                          primary={loading ? '' : 'primary'}\r\n                        >\r\n                          FIGHT\r\n                        </s.Button>\r\n                      </s.Container>\r\n                    )}\r\n                  </s.ContainerCard>\r\n                  <s.SpacerSmall />\r\n                </div>\r\n              )\r\n            })\r\n          ) : (\r\n            <s.TextSubTitle style={{ marginTop: 50 }}>\r\n              Aucun Ennemies disponible\r\n              <br />\r\n              (niveau trop faible, mort ou en repos)\r\n            </s.TextSubTitle>\r\n          ))}\r\n\r\n        {/* MESSAGE d'erreur quand aucun ennemie n'est disponible */}\r\n        {/* <s.TextSubTitle style={{ textAlign: 'center' }}>\r\n    Aucun Ennemies disponible\r\n    <br />\r\n    (niveau trop faible, mort ou en repos)\r\n    </s.TextSubTitle> */}\r\n      </s.Container>\r\n      <s.SpacerLarge />\r\n    </s.Container>\r\n  )\r\n}\r\n\r\nexport default MyEnemies\r\n","import React from \"react\";\r\nimport s_1 from \"../img/stuffs/swordBasic.png\";\r\nimport s_2 from \"../img/stuffs/shieldBasic.png\";\r\nimport s_3 from \"../img/stuffs/swordExcalibur.png\";\r\nimport s_4 from \"../img/stuffs/shieldAegis.png\";\r\nimport s_5 from \"../img/stuffs/potion.png\";\r\n\r\nconst StuffRenderer = ({ stuffId, size, style }) => {\r\n  const stuffs = [\"\", s_1, s_2, s_3, s_4, s_5,]\r\n\r\n  const stuffStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minWidth: size,\r\n        minHeight: size,\r\n        position: \"relative\",\r\n        marginBottom: 10,\r\n        ...style,\r\n      }}\r\n    >\r\n      <img alt={\"bg\"} src={stuffs[stuffId]} style={stuffStyle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StuffRenderer;\r\n\r\n// import React, { useState, useRef } from 'react'\r\n// import classnames from 'classnames'\r\n// import { useIntersection } from './intersectionObserver'\r\n// import '../styles/imageRenderer.scss'\r\n\r\n// const StuffRenderer = ({ stuffId, size, style }) => {\r\n\r\n//   const stuffStyle = {\r\n//     width: \"100%\",\r\n//     height: \"100%\",\r\n//     position: \"absolute\",\r\n//   };\r\n\r\n//   const ImageRenderer = ({ url, thumb, width, height }) => {\r\n//     const [isLoaded, setIsLoaded] = useState(false)\r\n//     const [isInView, setIsInView] = useState(false)\r\n//     const imgRef = useRef()\r\n//     useIntersection(imgRef, () => {\r\n//       setIsInView(true)\r\n//     })\r\n\r\n//     const handleOnLoad = () => {\r\n//       setIsLoaded(true)\r\n//     }\r\n//     return (\r\n//       <div\r\n//         className=\"image-container\"\r\n//         ref={imgRef}\r\n//         style={{\r\n//           paddingBottom: `${(height / width) * 100}%`,\r\n//           width: '100%',\r\n//         }}\r\n//       >\r\n//         {isInView && (\r\n//           <>\r\n//             <img\r\n//               className={classnames('image', 'thumb', {\r\n//                 ['isLoaded']: !!isLoaded\r\n//               })}\r\n//               src={thumb}\r\n//             />\r\n//             <img\r\n//               className={classnames('image', {\r\n//                 ['isLoaded']: !!isLoaded,\r\n//               })}\r\n//               src={url}\r\n//               onLoad={handleOnLoad}\r\n//               stle={stuffStyle}\r\n//             />\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     )\r\n//   }\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         minWidth: size,\r\n//         minHeight: size,\r\n//         position: \"relative\",\r\n//         marginBottom: 10,\r\n//         ...style,\r\n//       }}\r\n//     >\r\n//       <ImageRenderer\r\n//         key={stuffId}\r\n//         url={`https://gateway.pinata.cloud/ipfs/QmZEC9RAZ2bLdgdXEg3x2zno4Cq62SzMMZbjCyvgkP3KxG/${stuffId}.png`}\r\n//         thumb={`https://gateway.pinata.cloud/ipfs/QmZEC9RAZ2bLdgdXEg3x2zno4Cq62SzMMZbjCyvgkP3KxG/${stuffId}.png`}\r\n//         width={size}\r\n//         height={size}\r\n//       />\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default StuffRenderer;","import React from 'react'\r\nimport * as s from '../styles/globalStyles'\r\nimport StuffRenderer from '../components/StuffRenderer'\r\nimport img from '../img/MyStuff.jpg'\r\n\r\nconst MyStuff = ({\r\n  loading,\r\n  stuffs,\r\n  characters,\r\n  stuffType,\r\n  setTypeBuyStuff,\r\n  buyStuff,\r\n  typeBuyStuff,\r\n  setTypeEquipChar,\r\n  typeEquipChar,\r\n  equipStuff,\r\n  potionUse,\r\n  balancesContractStuff,\r\n  balancesMyStuff,\r\n}) => {\r\n  const handleSelectedCharacter = (e) => {\r\n    if (e === '') {\r\n      setTypeEquipChar(null)\r\n      return null\r\n    }\r\n    let tempArray = { id: null, hp: null, stamina: null }\r\n    let character = JSON.parse(e)\r\n    tempArray.id = character.id\r\n    tempArray.hp = character.hp\r\n    tempArray.stamina = character.stamina\r\n    setTypeEquipChar(tempArray)\r\n  }\r\n\r\n  return (\r\n    <s.Container image={img} ai=\"center\" flex=\"1\" style={{ paddingTop: 80 }}>\r\n      <s.TextTitle>Boutique</s.TextTitle>\r\n      <div style={{ flexDirection: 'row' }}>\r\n        <s.Select onChange={(e) => setTypeBuyStuff(e.target.value)}>\r\n          {stuffType.map((stuff, i) => {\r\n            if (balancesContractStuff[i] !== '0') {\r\n              return (\r\n                <option key={i} value={i}>\r\n                  {stuff}\r\n                </option>\r\n              )\r\n            } else return ''\r\n          })}\r\n        </s.Select>\r\n\r\n        <s.ButtonTop\r\n          disabled={loading ? 1 : 0}\r\n          onClick={() => buyStuff(typeBuyStuff)}\r\n          primary={loading ? '' : 'primary'}\r\n        >\r\n          Achat équipement\r\n        </s.ButtonTop>\r\n      </div>\r\n\r\n      <s.SpacerLarge />\r\n\r\n      <s.TextTitle>Mon Equipement</s.TextTitle>\r\n      {characters && characters.length > 0 ? (\r\n        stuffs.length > 0 || balancesMyStuff[5] > 0 ? (\r\n          <>\r\n            <s.TextSubTitle>\r\n              Veuillez choisir un personnage à équiper\r\n            </s.TextSubTitle>\r\n            <s.Select\r\n              bc=\"#46bcb9\"\r\n              color=\"white\"\r\n              onChange={(e) => {\r\n                handleSelectedCharacter(e.target.value)\r\n              }}\r\n            >\r\n              <option value=\"\">Choisissez un personnage</option>\r\n              {characters.map((character) => (\r\n                <option\r\n                  key={character.id}\r\n                  value={`{\"id\":${character.id},\"hp\":${character.hp},\"stamina\":${character.stamina}}`}\r\n                >\r\n                  ID #{character.id}\r\n                </option>\r\n              ))}\r\n            </s.Select>\r\n          </>\r\n        ) : (\r\n          <s.TextSubTitle style={{ marginTop: 50 }}>\r\n            Vous ne possédez pas encore d'équipement.\r\n            <br />\r\n            La boutique est juste au dessus.\r\n          </s.TextSubTitle>\r\n        )\r\n      ) : (\r\n        <>\r\n          <s.TextSubTitle>\r\n            Vous ne possédez pas encore de Personnage.\r\n          </s.TextSubTitle>\r\n          <s.ButtonHome>\r\n            <s.ButtonLink to=\"/MyCharacters\">\r\n              Commencer l'aventure !\r\n            </s.ButtonLink>\r\n          </s.ButtonHome>\r\n        </>\r\n      )}\r\n      <s.Container fd=\"row\" jc=\"center\" style={{ flexWrap: 'wrap' }}>\r\n        {balancesMyStuff[5] > 0 && (\r\n          <s.ContainerCard\r\n            ai=\"center\"\r\n            jc=\"space-around\"\r\n            style={{ minHeight: 397, margin: 30 }}\r\n          >\r\n            <StuffRenderer stuffId={5} size={200} />\r\n            <s.Container bc=\"black\" ai=\"center\" flex=\"1\" jc=\"center\">\r\n              <s.TextDescription>Name : POTION</s.TextDescription>\r\n              <s.TextDescription>HP : FULL</s.TextDescription>\r\n              <s.TextDescription>Stamina : FULL</s.TextDescription>\r\n              <s.TextDescription>\r\n                Quantity : {balancesMyStuff[5]}\r\n              </s.TextDescription>\r\n            </s.Container>\r\n\r\n            {characters &&\r\n            characters.length > 0 &&\r\n            typeEquipChar &&\r\n            (typeEquipChar.hp < 100 || typeEquipChar.stamina < 100) ? (\r\n              <s.Button\r\n                disabled={loading ? 1 : 0}\r\n                onClick={() => potionUse(typeEquipChar.id)}\r\n                primary={loading ? '' : 'primary'}\r\n              >\r\n                USE A POTION\r\n              </s.Button>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </s.ContainerCard>\r\n        )}\r\n        {stuffs &&\r\n          stuffs.length > 0 &&\r\n          stuffs.map((stuff) => {\r\n            return (\r\n              <div key={stuff.id} style={{ margin: 30 }}>\r\n                <s.ContainerCard ai=\"center\" style={{ minWidth: 200 }}>\r\n                  <StuffRenderer stuffId={stuff.id} size={200} />\r\n                  <s.Container bc=\"black\" ai=\"center\">\r\n                    <s.TextDescription>\r\n                      Name : {stuffType[stuff.id]}\r\n                    </s.TextDescription>\r\n                    <s.TextDescription>\r\n                      Bonus Attack 1 : {stuff.bonusAttack1}\r\n                    </s.TextDescription>\r\n                    <s.TextDescription>\r\n                      Bonus Attack 2 : {stuff.bonusAttack2}\r\n                    </s.TextDescription>\r\n                    <s.TextDescription>\r\n                      Bonus Defence 1 : {stuff.bonusDefence1}\r\n                    </s.TextDescription>\r\n                    <s.TextDescription>\r\n                      Bonus Defence 2 : {stuff.bonusDefence2}\r\n                    </s.TextDescription>\r\n                    <s.TextDescription>\r\n                      Type : {stuff.typeStuff === '0' ? 'WEAPON' : 'SHIELD'}\r\n                    </s.TextDescription>\r\n                    <s.TextDescription>\r\n                      Quantity : {balancesMyStuff[stuff.id]}\r\n                    </s.TextDescription>\r\n                  </s.Container>\r\n\r\n                  {characters && characters.length > 0 && typeEquipChar ? (\r\n                    <s.Button\r\n                      disabled={loading ? 1 : 0}\r\n                      onClick={() => equipStuff(typeEquipChar.id, stuff.id)}\r\n                      primary={loading ? '' : 'primary'}\r\n                    >\r\n                      Equiper Stuff\r\n                    </s.Button>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </s.ContainerCard>\r\n              </div>\r\n            )\r\n          })}\r\n      </s.Container>\r\n\r\n      <s.SpacerLarge />\r\n    </s.Container>\r\n  )\r\n}\r\n\r\nexport default MyStuff\r\n","import styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Nav = styled.div`\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  background: black;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n`\r\n\r\nexport const Menu = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  @media (max-width: 1125px) {\r\n    overflow: hidden;\r\n    flex-direction: column;\r\n    max-height: ${({ isOpen }) => (isOpen ? '300px' : '0')};\r\n    transition: max-height 0.3s ease-in;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const MenuLink = styled.div`\r\n  flex: 1;\r\n  padding: 0.1rem 1rem;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: #46bcb9;\r\n  transition: all 0.3s ease-in;\r\n  font-size: 1.2rem;\r\n  &:hover {\r\n    color: #ff00ff;\r\n  }\r\n`\r\n\r\nexport const Hamburger = styled.div`\r\n  display: none;\r\n  flex-direction: column;\r\n  cursor: pointer;\r\n  span {\r\n    height: 2px;\r\n    width: 25px;\r\n    background: #7b7fda;\r\n    margin-bottom: 4px;\r\n    border-radius: 5px;\r\n  }\r\n  @media (max-width: 1125px) {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nexport const NavbarAddress = styled.div`\r\n  margin: ${({ margin }) => (margin ? `${margin}px` : 'none')}\r\n  display: flex;\r\n  margin-right: 20px;\r\n\r\n  @media (max-width: 750px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  text-decoration: none;\r\n\r\n  :hover {\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport * as n from'../styles/Navbar.style.js'\r\nimport logo from '../img/logoGrosTraits.png'\r\n\r\nconst Navbar = ({ accounts }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  return (\r\n    <n.Nav>\r\n      <div style={{ flex: 1, display: 'flex', alignItems: 'center' }}>\r\n        <n.NavLink to=\"/\">\r\n          <img\r\n            style={{ width: 50, height: 50, margin: 5 }}\r\n            src={logo}\r\n            alt=\"Logo Unlimited Evolution\"\r\n          />\r\n        </n.NavLink>\r\n        <n.Menu isOpen={isOpen}>\r\n          <n.NavLink to=\"/\">\r\n          <n.MenuLink>Accueil</n.MenuLink>\r\n        </n.NavLink>\r\n          <n.NavLink to=\"/MyCharacters\">\r\n            <n.MenuLink>Mes Personnages</n.MenuLink>\r\n          </n.NavLink>\r\n          <n.NavLink to=\"/MyStuff\">\r\n            <n.MenuLink>Mon Equipement</n.MenuLink>\r\n          </n.NavLink>\r\n          <n.NavLink to=\"/MyEnemies\">\r\n            <n.MenuLink>Mes Ennemies</n.MenuLink>\r\n          </n.NavLink>\r\n        </n.Menu>\r\n      </div>\r\n      <n.NavbarAddress margin={10} style={{color:\"white\"}}>\r\n        {accounts !== null && accounts[0]}\r\n      </n.NavbarAddress>\r\n      <n.Hamburger onClick={() => setIsOpen(!isOpen)}>\r\n        <span />\r\n        <span />\r\n        <span />\r\n      </n.Hamburger>\r\n    </n.Nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as s from './styles/globalStyles'\r\nimport UnlimitedEvolution from './contracts/UnlimitedEvolution.json'\r\nimport getWeb3 from './getWeb3'\r\nimport Home from './pages/Home'\r\nimport Modal from './components/Modal'\r\nimport MyCharacters from './pages/MyCharacters'\r\nimport MyEnemies from './pages/MyEnemies'\r\nimport MyStuff from './pages/MyStuff'\r\nimport Navbar from './components/Navbar'\r\n\r\nconst App = () => {\r\n  const [web3, setWeb3] = useState(null)\r\n  const [accounts, setAccounts] = useState(null)\r\n  const [ueContract, setUeContract] = useState(null)\r\n  const [timeStamp, setTimeStamp] = useState(null)\r\n  const [characters, setCharacters] = useState(null)\r\n  const [typeCharacter, setTypeCharacter] = useState(0)\r\n  const [genderCharacter, setGenderCharacter] = useState(0)\r\n  const [othersCharacters, setOthersCharacters] = useState(null)\r\n  const [selectedCharacter, setSelectedCharacter] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [modalShow, setModalShow] = useState(false)\r\n  const [titleModal, setTitleModal] = useState(false)\r\n  const [contentModal, setContentModal] = useState(false)\r\n  const [stuffs, setStuffs] = useState(null)\r\n  const [balancesContractStuff, setBalancesContractStuff] = useState([])\r\n  const [balancesMyStuff, setBalancesMyStuff] = useState([])\r\n  const [typeBuyStuff, setTypeBuyStuff] = useState(1)\r\n  const [typeEquipChar, setTypeEquipChar] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        // Get network provider and web3 instance.\r\n        const web3 = await getWeb3()\r\n        web3.eth.handleRevert = true\r\n\r\n        // Use web3 to get the user's accounts.\r\n        const accounts = await web3.eth.getAccounts()\r\n\r\n        if (window.ethereum) {\r\n          window.ethereum.on('accountsChanged', (accounts) => {\r\n            setAccounts({ accounts })\r\n            window.location.reload()\r\n          })\r\n\r\n          window.ethereum.on('chainChanged', (_chainId) =>\r\n            window.location.reload(),\r\n          )\r\n        }\r\n\r\n        const networkId = await web3.eth.net.getId()\r\n        if (networkId !== 1337 && networkId !== 80001) {\r\n          handleModal('Wrong Network', 'Please Switch to the Mumbai Polygon Network')\r\n          return\r\n        }\r\n\r\n        // Load UnlimitedEvolution and the NFTs\r\n        const ueNetwork = UnlimitedEvolution.networks[networkId]\r\n        const ueContract = new web3.eth.Contract(\r\n          UnlimitedEvolution.abi,\r\n          ueNetwork && ueNetwork.address,\r\n        )\r\n        setUeContract(ueContract)\r\n        await ueContract.methods\r\n          .getMyCharacters()\r\n          .call({ from: accounts[0] })\r\n          .then((res) => setCharacters(res))\r\n        await ueContract.methods\r\n          .getOthersCharacters()\r\n          .call({ from: accounts[0] })\r\n          .then((res) => setOthersCharacters(res))\r\n        await ueContract.methods\r\n          .getMyStuffs()\r\n          .call({ from: accounts[0] })\r\n          .then((res) => setStuffs(res))\r\n\r\n        let lastBlockNumber = await web3.eth.getBlockNumber()\r\n        let lastBlockInfo = await web3.eth.getBlock(lastBlockNumber)\r\n        setTimeStamp(lastBlockInfo.timestamp)\r\n\r\n        // Subscribe to the contract states to update the front states\r\n        web3.eth.subscribe('newBlockHeaders', async (err, res) => {\r\n          if (!err) {\r\n            await ueContract.methods\r\n              .getMyCharacters()\r\n              .call({ from: accounts[0] })\r\n              .then((res) => setCharacters(res))\r\n            await ueContract.methods\r\n              .getOthersCharacters()\r\n              .call({ from: accounts[0] })\r\n              .then((res) => setOthersCharacters(res))\r\n            await ueContract.methods\r\n              .getMyStuffs()\r\n              .call({ from: accounts[0] })\r\n              .then((res) => setStuffs(res))\r\n            lastBlockNumber = await web3.eth.getBlockNumber()\r\n            lastBlockInfo = await web3.eth.getBlock(lastBlockNumber)\r\n            setTimeStamp(lastBlockInfo.timestamp)\r\n          }\r\n        })\r\n\r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n        // example of interacting with the contract's methods.\r\n        setWeb3(web3)\r\n        setAccounts(accounts)\r\n      } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        handleModal(\r\n          'Error',\r\n          `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        )\r\n        console.error(error)\r\n      }\r\n    }\r\n    init()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const balanceContractStuff = async () => {\r\n      if (ueContract !== null && web3 !== null && accounts !== null) {\r\n        let tempArray = []\r\n        for (let i=0; i < 6; i++) {\r\n          await ueContract.methods\r\n          .balanceOf(ueContract._address, i)\r\n          .call({ from: accounts[0] })\r\n          .then((res) => tempArray.push(res))\r\n        }\r\n        setBalancesContractStuff(tempArray)\r\n      }\r\n    }\r\n    const balanceMyStuff = async () => {\r\n      if (ueContract !== null && web3 !== null && accounts !== null) {\r\n        let tempArray = []\r\n        for (let i=0; i < 6; i++) {\r\n          await ueContract.methods\r\n          .balanceOf(accounts[0], i)\r\n          .call({ from: accounts[0] })\r\n          .then((res) => tempArray.push(res))\r\n        }\r\n        setBalancesMyStuff(tempArray)\r\n      }\r\n    }\r\n    balanceContractStuff()\r\n    balanceMyStuff()\r\n  }, [ueContract, web3, accounts, stuffs])\r\n\r\n  // EVENTS\r\n  useEffect(() => {\r\n    if (ueContract !== null && web3 !== null && accounts !== null) {\r\n      ueContract.events\r\n        .CharacterCreated()\r\n        .on('data', (event) =>\r\n          handleModal(\r\n            `Character Created ID #${event.returnValues.id}`,\r\n            'Your character is ready, you can interacting with other NFTs',\r\n          ),\r\n        )\r\n        .on('error', (err) => handleModal('Error', err.message))\r\n\r\n      ueContract.events\r\n        .Rested()\r\n        .on('data', (event) =>\r\n          handleModal(\r\n            'Your Character Is Rested',\r\n            `Your character #${event.returnValues.tokenId} is resting, your character will be available in 24 hours with all his hp and stamina`,\r\n          ),\r\n        )\r\n        .on('error', (err) => handleModal('Error', err.message))\r\n\r\n      ueContract.events\r\n        .Fighted()\r\n        .on('data', (event) =>\r\n          handleModal(\r\n            'The Fight Took Place',\r\n            `Your character #${event.returnValues.myTokenId} fought with #${event.returnValues.rivalTokenId}. \r\n        You inflicted ${event.returnValues.substrateLifeToRival} hp and you suffered ${event.returnValues.substrateLifeToMe} hp.`,\r\n          ),\r\n        )\r\n        .on('error', (err) => handleModal('Error', err.message))\r\n\r\n      ueContract.events\r\n        .LevelUp()\r\n        .on('data', (event) =>\r\n          handleModal(\r\n            'Congratulations !',\r\n            `Your character #${event.returnValues.tokenId} is now level #${event.returnValues.level}.`,\r\n          ),\r\n        )\r\n        .on('error', (err) => handleModal('Error', err.message))\r\n\r\n      ueContract.events\r\n        .StuffBought()\r\n        .on('data', (event) =>\r\n          handleModal(\r\n            'Congratulations !',\r\n            `You bought the stuff #${event.returnValues.stuffId}.`,\r\n          ),\r\n        )\r\n        .on('error', (err) => handleModal('Error', err.message))\r\n      ueContract.events\r\n        .StuffEquiped()\r\n        .on('data', (event) =>\r\n          handleModal(\r\n            'Congratulations !',\r\n            `Your character #${event.returnValues.tokenId} is now equiped with the stuff #${event.returnValues.stuffId}.`,\r\n          ),\r\n        )\r\n        .on('error', (err) => handleModal('Error', err.message))\r\n      ueContract.events\r\n        .PotionUsed()\r\n        .on('data', (event) =>\r\n          handleModal(\r\n            'Congratulations !',\r\n            `Your character #${event.returnValues.tokenId} used a potion and just recovered 100 hp and stamina.`,\r\n          ),\r\n        )\r\n        .on('error', (err) => handleModal('Error', err.message))\r\n    }\r\n  }, [accounts, ueContract, web3])\r\n\r\n  const createCharacter = () => {\r\n    setLoading(true)\r\n    ueContract.methods\r\n      .askCreateCharacter(typeCharacter, genderCharacter)\r\n      .send({ from: accounts[0], value: web3.utils.toWei('0.001', 'Ether') })\r\n      .once('error', (err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n      .then((receipt) => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const fight = (_myTokenId, _rivalTokenId) => {\r\n    setLoading(true)\r\n    ueContract.methods\r\n      .fight(_myTokenId, _rivalTokenId)\r\n      .send({ from: accounts[0] })\r\n      .once('error', (err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const rest = (_myTokenId) => {\r\n    setLoading(true)\r\n    ueContract.methods\r\n      .rest(_myTokenId)\r\n      .send({ from: accounts[0] })\r\n      .once('error', (err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const buyStuff = (_stuffId) => {\r\n    setLoading(true)\r\n    ueContract.methods\r\n      .buyStuff(_stuffId)\r\n      .send({ from: accounts[0], value: web3.utils.toWei('0.001', 'Ether') })\r\n      .once('error', (err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const equipStuff = (_tokenId, _stuffId) => {\r\n    setLoading(true)\r\n    ueContract.methods\r\n      .equipStuff(_tokenId, _stuffId)\r\n      .send({ from: accounts[0] })\r\n      .once('error', (err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const potionUse = (_myTokenId) => {\r\n    setLoading(true)\r\n    ueContract.methods\r\n      .usePotion(_myTokenId)\r\n      .send({ from: accounts[0] })\r\n      .once('error', (err) => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n      .then((res) => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const typeCharacterName = (val) => {\r\n    if (parseInt(val) === 0) {\r\n      return 'BRUTE'\r\n    } else if (parseInt(val) === 1) {\r\n      return 'SPIRITUAL'\r\n    } else {\r\n      return 'ELEMENTARY'\r\n    }\r\n  }\r\n\r\n  const typeGenderName = (val) => {\r\n    if (parseInt(val) === 0) {\r\n      return 'MASCULINE'\r\n    } else if (parseInt(val) === 1) {\r\n      return 'FEMININE'\r\n    } else {\r\n      return 'OTHER'\r\n    }\r\n  }\r\n\r\n  const handleModal = (title, content) => {\r\n    setTitleModal(title)\r\n    setContentModal(content)\r\n    setModalShow(true)\r\n  }\r\n\r\n  const attacks = (type, nb) => {\r\n    const attacksType = {\r\n      brute: ['Speed', 'Power', 'Resistance', 'Weapons'],\r\n      spiritual: ['Gravitation', 'Electromagnetism', 'Magic', 'Invocation'],\r\n      elementary: ['Air', 'Water', 'Earth', 'Fire'],\r\n    }\r\n    if (type === '0') return attacksType.brute[nb]\r\n    if (type === '1') return attacksType.spiritual[nb]\r\n    if (type === '2') return attacksType.elementary[nb]\r\n  }\r\n\r\n  const stuffType = [\r\n    '',\r\n    'BASIC SWORD',\r\n    'BASIC SHIELD',\r\n    'EXCALIBUR',\r\n    'AEGIS',\r\n    'POTION',\r\n  ]\r\n\r\n  const resting = (character, timeStamp) => {\r\n    if (timeStamp - 86400 < character.lastRest) {\r\n      return `ID#${character.id} is Resting (can't fight)`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <s.Screen>\r\n      {!web3 ? (\r\n        <>\r\n          <s.TextTitle color=\"black\" style={{ alignSelf: 'center' }}>\r\n            Loading Web3, accounts, and contract...\r\n          </s.TextTitle>\r\n          <Modal\r\n            modalShow={modalShow}\r\n            setModalShow={setModalShow}\r\n            title={titleModal}\r\n            content={contentModal}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Navbar accounts={accounts} />\r\n\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Home />} />\r\n            <Route\r\n              path=\"/MyCharacters\"\r\n              element={\r\n                <MyCharacters\r\n                  loading={loading}\r\n                  rest={rest}\r\n                  createCharacter={createCharacter}\r\n                  setTypeCharacter={setTypeCharacter}\r\n                  setGenderCharacter={setGenderCharacter}\r\n                  characters={characters}\r\n                  attacks={attacks}\r\n                  typeCharacterName={typeCharacterName}\r\n                  typeGenderName={typeGenderName}\r\n                  stuffType={stuffType}\r\n                  potionUse={potionUse}\r\n                  resting={resting}\r\n                  timeStamp={timeStamp}\r\n                  balancesMyStuff={balancesMyStuff}\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/MyEnemies\"\r\n              element={\r\n                <MyEnemies\r\n                  loading={loading}\r\n                  characters={characters}\r\n                  attacks={attacks}\r\n                  typeCharacterName={typeCharacterName}\r\n                  typeGenderName={typeGenderName}\r\n                  othersCharacters={othersCharacters}\r\n                  setSelectedCharacter={setSelectedCharacter}\r\n                  selectedCharacter={selectedCharacter}\r\n                  fight={fight}\r\n                  stuffType={stuffType}\r\n                  timeStamp={timeStamp}\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/MyStuff\"\r\n              element={\r\n                <MyStuff\r\n                  loading={loading}\r\n                  characters={characters}\r\n                  stuffs={stuffs}\r\n                  stuffType={stuffType}\r\n                  buyStuff={buyStuff}\r\n                  equipStuff={equipStuff}\r\n                  setTypeBuyStuff={setTypeBuyStuff}\r\n                  typeBuyStuff={typeBuyStuff}\r\n                  setTypeEquipChar={setTypeEquipChar}\r\n                  typeEquipChar={typeEquipChar}\r\n                  potionUse={potionUse}\r\n                  balancesContractStuff={balancesContractStuff}\r\n                  balancesMyStuff={balancesMyStuff}\r\n                />\r\n              }\r\n            />\r\n          </Routes>\r\n\r\n          <Modal\r\n            modalShow={modalShow}\r\n            setModalShow={setModalShow}\r\n            title={titleModal}\r\n            content={contentModal}\r\n          />\r\n        </>\r\n      )}\r\n    </s.Screen>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}